{
  "version": 3,
  "sources": ["../src/kaffe.ts"],
  "sourcesContent": ["export default function run(elementId: string, nodeSetup: { [key:string]: any }, state: { [key:string]: any }): Kaffi {\n  let kaffi = new Kaffi(document.getElementById(elementId)!);\n  // add renderers\n  kaffi.useRenderer(button);\n  kaffi.useRenderer(div);\n  kaffi.useRenderer(text);\n\n  // Set global state\n  kaffi.useState(state);\n\n  // render all nodes\n  kaffi.render(nodeSetup);\n\n  return kaffi;\n}\n\nexport function createApp(elementId: string): Kaffi {\n  let kaffi = new Kaffi(document.getElementById(elementId)!);\n  // add renderers\n  kaffi.useRenderer(button);\n  kaffi.useRenderer(div);\n  kaffi.useRenderer(text);\n\n  return kaffi;\n}\n\n\nexport function button(props: any): HTMLButtonElement {\n  let e = document.createElement(\"button\");\n  \n  for (const [key, value] of Object.entries(props)) {\n    if (key == \"onUpdate\") continue;\n\n    if (key == \"click\" && typeof value == \"function\") {\n      e.addEventListener(\"click\", () => value(set));\n    } else {\n      if (typeof value == \"string\") e.setAttribute(key, value);\n    }\n  }\n\n  return e;\n}\n\nexport function div(props: any): HTMLDivElement {\n  let e = document.createElement(\"div\");\n\n  for (const [key, value] of Object.entries(props)) {\n    if (key == \"onUpdate\") continue;\n\n    if (key == \"click\" && typeof value == \"function\") {\n      e.addEventListener(\"click\", () => value(e));\n    } else {\n      if (typeof value == \"string\") e.setAttribute(key, value);\n    }\n  }\n\n  return e;\n}\n\nexport function text(props: any): HTMLSpanElement {\n  let e = document.createElement(\"span\");\n\n  for (const [key, value] of Object.entries(props)) {\n    if (key == \"onUpdate\") continue;\n\n    if (key == \"value\" && typeof value != \"function\") {\n      e.innerHTML = props.value;\n    };\n\n    if (key == \"click\" && typeof value == \"function\") {\n      e.addEventListener(\"click\", () => value((state: any) => console.log(state)));\n    } else {\n      if (typeof value == \"string\") e.setAttribute(key, value);\n    }\n  }\n\n  return e;\n}\n\nfunction set(stateFunc: (state: any) => void) {\n  stateFunc(window.KaffiState);\n  window.KaffiApp.updateState();\n}\n\nexport type Renderer = (props: any) => HTMLElement;\n\nclass Kaffi {\n  renderers: Map<string, Renderer> = new Map();\n  appContainer: HTMLElement;\n  textElements: { element: HTMLSpanElement, stateFunc: (state: any) => any; }[] = [];\n  listeners: { element: HTMLElement, stateFunc: (state: any, element: HTMLElement) => void; }[] = [];\n\n  constructor(appContainer: HTMLElement) {\n    this.appContainer = appContainer;\n    window.KaffiApp = this;\n  }\n\n  useRenderer(r: Renderer) {\n    this.renderers.set(r.name, r);\n  }\n\n  render(node: { [key:string]: any }) {\n    this.appContainer.append(this.renderNode(\"div\", node));\n    this.updateState();\n  }\n\n  renderNode(name: string, node: { [key:string]: any }): HTMLElement {\n    let renderer = this.renderers.get(name);\n    if (!renderer) renderer = this.renderers.get(\"div\")!;\n  \n    let el = renderer(this.getNodeProps(node));\n    let nodeChildren = this.getNodeChildren(node);\n\n    if (this.containsOnUpdate(node)) {\n      let updateObj = this.getNodeProps(node).onUpdate!\n      \n      if (typeof updateObj == \"function\") {\n        this.listeners.push({\n          element: el,\n          stateFunc: updateObj\n        });\n      }\n    }\n\n    if (this.containsText(node)) {\n      let textObj = nodeChildren.find(([k, _]) => k == \"text\");\n      let textEl = this.renderNode(\"text\", textObj![1]);\n      \n      if (typeof textObj![1].value == \"function\") {\n        this.textElements.push({\n          element: textEl,\n          stateFunc: textObj![1].value\n        });\n      }\n\n      el.append(textEl);\n    } else {\n      this.getNodeChildren(node).forEach(([k, v]) => {\n        el.appendChild(this.renderNode(k, v));\n      });\n    }\n\n    return el;\n  }\n\n  getNodeProps(node: { [key:string]: any }) {\n    return Object.fromEntries(Object.entries(node).filter(([_, v]) => typeof v != \"object\"));\n  }\n\n  getNodeChildren(node: { [key:string]: any }) {\n    return Object.entries(node).filter(([_, v]) => typeof v == \"object\");\n  }\n\n  containsText(node: { [key:string]: any }): boolean {\n    return Object.keys(node).some(k => k == \"text\");\n  }\n\n  containsOnUpdate(node: { [key:string]: any }): boolean {\n    return Object.keys(node).some(k => k == \"onUpdate\");\n  }\n\n  useState(state: any) {\n    window.KaffiState = state;\n  }\n\n  updateState() {\n    this.textElements.forEach(obj => {\n      obj.element.innerHTML = obj.stateFunc(window.KaffiState);\n    });\n\n    this.listeners.forEach(obj => {\n      obj.stateFunc(window.KaffiState, obj.element);\n    });\n  }\n}\n\ndeclare global {\n  interface Window { KaffiState: any; KaffiApp: Kaffi }\n}"],
  "mappings": "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",
  "names": ["run", "elementId", "nodeSetup", "state", "kaffi", "Kaffi", "button", "div", "text", "createApp", "props", "key", "value", "set", "stateFunc", "appContainer", "r", "node", "name", "renderer", "el", "nodeChildren", "updateObj", "textObj", "k", "_", "textEl", "v", "obj"]
}
